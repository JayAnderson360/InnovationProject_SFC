<?php
header('Content-Type: application/json');

$response = [
    'success' => false,
    'message' => 'An unknown error occurred.',
    'paymentUrl' => null
];

// Define the target directory. Adjust if your php script is not in a 'php' folder directly under the website root.
// This path assumes the 'php' folder is at the same level as 'Resources' or that 'Resources' is one level up from 'php'.
// If course-dashboard.html is in /course-dashboard/ and php script is in /php/, then ../Resources/ is correct.
$target_dir = '../Resources/Images/PaymentProof/';

// Check if the target directory exists, if not, try to create it.
if (!file_exists($target_dir)) {
    if (!mkdir($target_dir, 0777, true)) {
        $response['message'] = 'Failed to create upload directory.';
        echo json_encode($response);
        exit;
    }
}

if (isset($_FILES['paymentProof']) && isset($_POST['fileName'])) {
    $file = $_FILES['paymentProof'];
    $client_provided_filename = basename($_POST['fileName']); // Use the filename generated by client

    // Sanitize the client-provided filename to prevent directory traversal and other issues
    // Remove any characters that are not alphanumeric, underscore, dash, or dot.
    $sanitized_filename = preg_replace('/[^A-Za-z0-9_\-\.]/', '', $client_provided_filename);
    if (empty($sanitized_filename)) {
        $sanitized_filename = "fallback_" . time() . "_" . basename($file["name"]); // Fallback if sanitization results in empty
    }
    
    $target_file = $target_dir . $sanitized_filename;
    $uploadOk = 1;
    $imageFileType = strtolower(pathinfo($target_file, PATHINFO_EXTENSION));

    // Check if image file is an actual image or fake image
    if (isset($file["tmp_name"]) && !empty($file["tmp_name"])) {
        $check = getimagesize($file["tmp_name"]);
        if ($check !== false) {
            // $response['message'] = "File is an image - " . $check["mime"] . ".";
            $uploadOk = 1;
        } else {
            $response['message'] = "File is not an image.";
            $uploadOk = 0;
        }
    } else {
        $response['message'] = "No file uploaded or file is empty.";
        $uploadOk = 0;
    }

    // Check file size (e.g., 5MB limit)
    if ($uploadOk && $file["size"] > 5000000) {
        $response['message'] = "Sorry, your file is too large (max 5MB).";
        $uploadOk = 0;
    }

    // Allow certain file formats
    if ($uploadOk && $imageFileType != "jpg" && $imageFileType != "png" && $imageFileType != "jpeg" && $imageFileType != "gif") {
        $response['message'] = "Sorry, only JPG, JPEG, PNG & GIF files are allowed.";
        $uploadOk = 0;
    }

    // Check if $uploadOk is set to 0 by an error
    if ($uploadOk == 0) {
        // $response['message'] is already set
    } else {
        if (move_uploaded_file($file["tmp_name"], $target_file)) {
            $response['success'] = true;
            $response['message'] = "The file " . htmlspecialchars($sanitized_filename) . " has been uploaded.";
            // The paymentUrl should be relative to the HTML file that will display it,
            // or an absolute path if you handle that consistently.
            // Given the client-side script is in course-dashboard/, and image is in Resources/
            // the path from course-dashboard.html would be ../Resources/Images/PaymentProof/filename
            $response['paymentUrl'] = '../Resources/Images/PaymentProof/' . $sanitized_filename;
        } else {
            $response['message'] = "Sorry, there was an error uploading your file. Check server permissions.";
        }
    }
} else {
    $response['message'] = "Required data (file or filename) not provided.";
}

echo json_encode($response);
?> 